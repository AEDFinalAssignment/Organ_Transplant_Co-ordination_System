/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.PatientdetailsWorkArea;

import System.EcoSystem;
import System.Hospital.Patient.Patient;
import System.Hospital.Patient.PatientDirectory;
import System.Hospital.Patient.VitalSigns.VitalSigns;
import System.Hospital.Patient.VitalSigns.VitalSignsDirectory;
import java.sql.SQLException;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class UpdatePatientvitals extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePatientvitals
     */
     private EcoSystem system;
    private JSplitPane jSplitPane1;
    String Username;
    int id;
    public UpdatePatientvitals(JSplitPane jSplitPane1,EcoSystem system,String Username,int id) throws SQLException {
        initComponents();
          this.jSplitPane1 = jSplitPane1;
        this.system = system;
        this.Username = Username;
        this.id = id;
        
        populateFeild(system,Username,id);
        populateTable(system,Username,id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVitals = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblVitals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date & Time ", "Primary Physician", "Primary Complaint", "Blood Type", "Allergies"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVitals);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 194, 965, 171));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("PATIENT ENCOUNTERS:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 37, 258, 25));
        add(txtGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(906, 104, 112, 23));

        jLabel2.setText("Patient  ID:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 104, 64, 23));
        add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 104, 112, 23));

        jLabel3.setText("Name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 104, 41, 23));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 104, 390, 23));

        jLabel4.setText("Age:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(746, 104, 31, 23));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(781, 104, 66, 23));

        jLabel5.setText("Gender:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(865, 104, -1, 23));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVitals;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientID;
    // End of variables declaration//GEN-END:variables

    private void populateTable(EcoSystem system, String Username, int id) throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
             DefaultTableModel model = (DefaultTableModel) tblVitals.getModel();
        model.setRowCount(0);
        
        VitalSignsDirectory VitalSignsDirectory;
        VitalSignsDirectory = system.getDBVitalSignsDirectory();   
        
        for(VitalSigns vs: VitalSignsDirectory.getVitalSignsDirectory())
        {
            if(vs.getPatientID()==id)
            {
            Object[] row = new Object[5];
             row[0]=vs;
             row[1]=vs.getPhysician();
             row[2]=vs.getComplains();
             row[3]=vs.getBloodType();
             row[4]=vs.getAllergiesList();
             
             model.addRow(row);
            }
        }
    }

    private void populateFeild(EcoSystem system, String Username, int id) throws SQLException {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
          DefaultTableModel model = (DefaultTableModel) tblVitals.getModel();
        model.setRowCount(0);
        
        PatientDirectory PatientDirectory;
        PatientDirectory = system.getDBPatientDirectory();   
        
        for(Patient p: PatientDirectory.getPatientDirectory())
        {
            if(p.getHospitalUsername().equals(Username) && p.getPatientID()==id)
            {
                txtPatientID.setText(String.valueOf(id));
                txtName.setText(p.getName());
                txtAge.setText(String.valueOf(p.getAge()));
                txtGender.setText(p.getGender());
            }
        }
    }
}
