/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.UNOsWorkArea;

import System.EcoSystem;
import System.Hospital.Patient.TransplantPatient;
import System.Hospital.Patient.TransplantPatientDirectory;
import java.sql.SQLException;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class PatientList extends javax.swing.JPanel {

    /**
     * Creates new form IncomingRequest
     */
     private EcoSystem system;
    private JSplitPane jSplitPane1;
    public PatientList(JSplitPane jSplitPane1,EcoSystem system) throws SQLException {
        initComponents();
         this.jSplitPane1 = jSplitPane1;
        this.system = system;
        
        populateTable(system);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Health ID", "Patient ID", "Name", "Organ Needed", "Status", "Hospital name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatients);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 106, 859, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Patients List:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 58, 156, 22));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatients;
    // End of variables declaration//GEN-END:variables

    private void populateTable(EcoSystem system) throws SQLException {
    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        model.setRowCount(0);
        
        TransplantPatientDirectory TransplantPatientDirectory;
        TransplantPatientDirectory = system.getDBTransplantDirectory();   
        
        for(TransplantPatient t: TransplantPatientDirectory.getTranplantPatientDirectory())
        {
            Object[] row = new Object[6];
             row[0]=t;
             row[1]=t.getPatientID();
             row[2]=t.getName();
             row[3]=t.getPhysician();
             row[4]=t.getOrgansNeeded();
             row[5]=t.getStatus();
             
             model.addRow(row);
        }
    }
}
