/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.HospitalAdminWorkArea;

import System.EcoSystem;

import javax.swing.JPanel;
import System.Hospital.Hospital;
import System.Hospital.Patient.Patient;
import System.Hospital.Patient.PatientDirectory;
import System.Hospital.Staff.Staff;
import System.Hospital.Staff.StaffDirectory;
import Userinterface.PatientdetailsWorkArea.ManagePatientVitals;
import Userinterface.PatientdetailsWorkArea.UpdatePatientvitals;
import Userinterface.SysAdminWorkArea.ManageHospital;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class UpdatePatientdetails extends javax.swing.JPanel {

    /**
     * Creates new form UpdatePatientdetails
     */
     private EcoSystem system;
    private JSplitPane jSplitPane1;

    JPanel managepatient;
    String Username;
    int id;
    
    public UpdatePatientdetails(JSplitPane jSplitPane1, EcoSystem system,JPanel managepatient,String Username,int id) throws SQLException {
        initComponents();
         this.jSplitPane1 = jSplitPane1;
        this.system = system;
        this.managepatient=managepatient;
        this.Username = Username;
        this.id = id;
       populateTable(Username);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientdetails = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatientdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Health ID", "Patient ID", "EntryDate", "Name", "Age", "Gender", "Address", "City", "State", "Zip Code", "Contact No", "Mail ID", "Emergency Contact Name", "Emergency contact number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientdetails);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 130, 1368, 418));

        btnView.setText("VIEW");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 606, -1, -1));

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 606, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("PATIENT  DETAILS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 62, 155, 26));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Add vitals");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1159, 602, -1, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("View vitals");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1306, 602, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 18, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientdetails.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a patient to add vitals.");
            return;
        }
        
        DefaultTableModel modeldoc = (DefaultTableModel) tblPatientdetails.getModel();
        Patient selectedPatient = (Patient) modeldoc.getValueAt(selectedRowIndex, 0);
        
        ManagePatientVitals mpv = new ManagePatientVitals(jSplitPane1,system,Username,selectedPatient.getPatientID());
        jSplitPane1.setRightComponent(mpv);
    }//GEN-LAST:event_jButton2ActionPerformed


    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:

        jSplitPane1.setRightComponent(managepatient);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientdetails.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a patient to add vitals.");
            return;
        }
        
        DefaultTableModel modeldoc = (DefaultTableModel) tblPatientdetails.getModel();
        Patient selectedPatient = (Patient) modeldoc.getValueAt(selectedRowIndex, 0);
        
        UpdatePatientvitals upv;
         try {
             upv = new UpdatePatientvitals(jSplitPane1,system,Username,selectedPatient.getPatientID());
             jSplitPane1.setRightComponent(upv);
         } catch (SQLException ex) {
             Logger.getLogger(UpdatePatientdetails.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
                int selectedRowIndex = tblPatientdetails.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a patient to view.");
            return;
        }
        
        DefaultTableModel modeldoc = (DefaultTableModel) tblPatientdetails.getModel();
        Patient selectedPatient = (Patient) modeldoc.getValueAt(selectedRowIndex, 0);
        
        CreatePatientdetails cpd = new CreatePatientdetails(jSplitPane1,system,managepatient,Username,selectedPatient.getPatientID());
        jSplitPane1.setRightComponent(cpd);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientdetails.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a Patient to delete.");
            return;
        }
        
        DefaultTableModel modelpatient = (DefaultTableModel) tblPatientdetails.getModel();
        Patient selectedPatient = (Patient) tblPatientdetails.getValueAt(selectedRowIndex, 0);
        
        for(Hospital H : system.getHospitalDirectory().getHospitalDirectory()){
            H.getPatientDirectory().getPatientDirectory().remove(selectedPatient);
        }
        
        try {
            system.deletePatientDB(selectedPatient);
        } catch (SQLException ex) {
            Logger.getLogger(ManageHospital.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(this, "Staff detHospitalails deleted sucessfully");
        try {
            populateTable(Username);
        } catch (SQLException ex) {
            Logger.getLogger(ManageHospital.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatientdetails;
    // End of variables declaration//GEN-END:variables

    private void populateTable(String Username) throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel model = (DefaultTableModel) tblPatientdetails.getModel();
        model.setRowCount(0);
        
        PatientDirectory PatientDirectory;
        PatientDirectory = system.getDBPatientDirectory();   
        
        for(Patient p: PatientDirectory.getPatientDirectory())
        {
            if(p.getHospitalUsername().equals(Username))
            {
            Object[] row = new Object[14];
             row[0]=p;
             row[1]=p.getPatientID();
             row[2]=p.getEntryDate();
             row[3]=p.getName();
             row[4]=p.getAge();
             row[5]=p.getGender();
             row[6]=p.getAddress();
             row[7]=p.getCity();
             row[8]=p.getState();
             row[9]=p.getZipcode();
             row[10]=p.getConNumber();
             row[11]=p.getEmailID();
             row[12]=p.getEmerConName();
             row[13]=p.getEmerConNumber();
             
             model.addRow(row);
            }
        }
    }
}
