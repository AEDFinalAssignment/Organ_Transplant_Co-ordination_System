/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.HospitalAdminWorkArea;

import System.EcoSystem;
import System.Hospital.Hospital;
import System.Hospital.HospitalDirectory;
import System.Hospital.Staff.Staff;
import System.Hospital.Staff.StaffDirectory;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JSplitPane;

/**
 *
 * @author sanjeev
 */
public class ManageStaffdetails extends javax.swing.JPanel {

    /**
     * Creates new form ManageStaffdetails
     */
    private EcoSystem system;
    private JSplitPane jSplitPane1;
    private String Username;
    private int id;
    JPanel Hospitalmain;
    public ManageStaffdetails(JSplitPane jSplitPane1,EcoSystem system,String Username,int id, JPanel Hospitalmain) {
        initComponents();
        this.jSplitPane1 = jSplitPane1;
        this.system = system;
        this.Username = Username;
        this.id = id;
        this.Hospitalmain=Hospitalmain;
        populateFeild(system,Username,id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtStaffID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtStaffID1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmailID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Designation = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtConNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtqualification = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtspecialisation = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("MANAGE STAFF DETAILS:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 203, 202, 30));

        jLabel2.setText("Staff ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 280, 68, 25));
        add(txtStaffID, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 280, 246, 25));

        jLabel3.setText("Staff Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 316, 68, 25));
        add(txtStaffID1, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 316, 246, 25));

        jLabel4.setText("Staff Designation");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 449, 88, 25));
        add(txtEmailID, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 399, 246, 25));

        jLabel5.setText("Mail ID ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 399, 88, 25));

        Designation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Designation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Nurse ", "Maintenance Staff", "Technical Staff" }));
        add(Designation, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 442, 246, 34));

        jLabel6.setText("Contact Number ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(361, 359, 83, 25));
        add(txtConNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 359, 246, 25));

        jLabel7.setText("Qualification ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 494, 68, 25));
        add(txtqualification, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 494, 246, 25));

        jLabel8.setText("Specialisation ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 530, 68, 25));
        add(txtspecialisation, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 530, 246, 25));

        jLabel9.setText("Authorised to do Transplant :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 573, -1, 25));

        buttonGroup1.add(jCheckBox1);
        jCheckBox1.setText("YES");
        add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(558, 575, -1, -1));

        buttonGroup1.add(jCheckBox2);
        jCheckBox2.setText("NO");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        add(jCheckBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(688, 575, -1, -1));

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(493, 648, -1, -1));

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 648, -1, -1));

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(639, 648, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 40, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            HospitalDirectory hosDirectory;
            hosDirectory = system.getDBHospitalDirectory();
            for(Hospital h: hosDirectory.getHospitalDirectory())
            {
                if(h.getUserName().equals(Username))
                {   
                    StaffDirectory sDirectory = system.getDBStaffDirectory();
                    for(Staff s: sDirectory.getStaffDirectory())
                    {
                        if(s.getStaff_ID()==this.id)
                        {
                    s.setName(txtStaffID1.getText());
                    s.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    s.setConNumber(Long.parseLong(txtConNumber.getText()));
                    s.setEmailID(txtEmailID.getText());
                    s.setDesignation(Designation.getSelectedItem().toString());
                    s.setQualification(txtqualification.getText());
                    s.setSpecialization(txtspecialisation.getText());
                    s.setHospitalUsername(Username);
                    
                    if(jCheckBox1.isSelected())
                    {
                        s.setAuthorization(true);
                    }
                    else{
                        s.setAuthorization(false);
                    }
                         
                         try {
                        system.updateHosStaffDB(s);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    txtStaffID1.setText("");
                    txtStaffID.setText("");
                    txtConNumber.setText("");
                    txtEmailID.setText("");
                    txtqualification.setText("");
                    txtspecialisation.setText("");   
                        }
                    }
                    for(Staff stf : h.getStaffDirectory().getStaffDirectory())
                    {
                    if(stf.getStaff_ID()==this.id)
                    {
                    stf.setName(txtStaffID1.getText());
                    stf.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    stf.setConNumber(Long.parseLong(txtConNumber.getText()));
                    stf.setEmailID(txtEmailID.getText());
                    stf.setDesignation(Designation.getSelectedItem().toString());
                    stf.setQualification(txtqualification.getText());
                    stf.setSpecialization(txtspecialisation.getText());
                    stf.setHospitalUsername(Username);
                    }
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            // TODO add your handling code here:
            HospitalDirectory hosDirectory;
            hosDirectory = system.getDBHospitalDirectory();
            for(Hospital h: hosDirectory.getHospitalDirectory())
            {
                if(h.getUserName().equals(Username))
                {
                    Staff stf = new Staff();
                    stf = h.addStaff();
                    stf.setName(txtStaffID1.getText());
                    stf.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    stf.setConNumber(Long.parseLong(txtConNumber.getText()));
                    stf.setEmailID(txtEmailID.getText());
                    stf.setDesignation(Designation.getSelectedItem().toString());
                    stf.setQualification(txtqualification.getText());
                    stf.setSpecialization(txtspecialisation.getText());
                    stf.setHospitalUsername(Username);
                    
                    if(jCheckBox1.isSelected())
                    {
                        stf.setAuthorization(true);
                    }
                    else{
                        stf.setAuthorization(false);
                    }
                    
                    try {
                        system.saveHosStaffDB(stf);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    txtStaffID1.setText("");
                    txtStaffID.setText("");
                    txtConNumber.setText("");
                    txtEmailID.setText("");
                    txtqualification.setText("");
                    txtspecialisation.setText("");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        UpdateStaffdetails usd;
        try {
            usd = new UpdateStaffdetails(this.jSplitPane1,this.system,Username,Hospitalmain);
            jSplitPane1.setRightComponent(usd);
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:

        jSplitPane1.setRightComponent(Hospitalmain);
    }//GEN-LAST:event_jLabel11MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Designation;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtConNumber;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtStaffID;
    private javax.swing.JTextField txtStaffID1;
    private javax.swing.JTextField txtqualification;
    private javax.swing.JTextField txtspecialisation;
    // End of variables declaration//GEN-END:variables

    private void populateFeild(EcoSystem system,String Username,int id) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      if(id!=-1)
      {
          try {
            // TODO add your handling code here:
            StaffDirectory stfDirectory;
            stfDirectory = system.getDBStaffDirectory();
            for(Staff s: stfDirectory.getStaffDirectory())
            {
                if(s.getStaff_ID()==id)
                {
                    txtStaffID.setText(String.valueOf(s.getStaff_ID()));
                    txtStaffID1.setText(s.getName());
                    txtConNumber.setText(String.valueOf(s.getConNumber()));
                    txtEmailID.setText(s.getEmailID());
                    txtqualification.setText(s.getQualification());
                    txtspecialisation.setText(s.getSpecialization());
                    if(s.isAuthorization())
                    {
                        jCheckBox1.setSelected(true);
                        jCheckBox2.setSelected(false);
                    }
                    else{
                        jCheckBox1.setSelected(false);
                        jCheckBox2.setSelected(true);
                    }
                    Designation.setSelectedItem(s.getDesignation());
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }
}
