/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.HospitalAdminWorkArea;

import System.EcoSystem;
import System.Hospital.Hospital;
import System.Hospital.HospitalDirectory;
import System.Hospital.Staff.Staff;
import System.Hospital.Staff.StaffDirectory;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSplitPane;

/**
 *
 * @author sanjeev
 */
public class ManageStaffdetails extends javax.swing.JPanel {

    /**
     * Creates new form ManageStaffdetails
     */
    private EcoSystem system;
    private JSplitPane jSplitPane1;
    private String Username;
    private int id;
    public ManageStaffdetails(JSplitPane jSplitPane1,EcoSystem system,String Username,int id) {
        initComponents();
        this.jSplitPane1 = jSplitPane1;
        this.system = system;
        this.Username = Username;
        this.id = id;
        populateFeild(system,Username,id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtStaffID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtStaffID1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmailID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Designation = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtConNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtqualification = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtspecialisation = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        btnSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("MANAGE STAFF DETAILS:");

        jLabel2.setText("Staff ID");

        jLabel3.setText("Staff Name");

        jLabel4.setText("Staff Designation");

        jLabel5.setText("Mail ID ");

        Designation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Designation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Nurse ", "Maintenance Staff", "Technical Staff" }));

        jLabel6.setText("Contact Number ");

        jLabel7.setText("Qualification ");

        jLabel8.setText("Specialisation ");

        jLabel9.setText("Authorised to do Transplant :");

        jCheckBox1.setText("YES");

        jCheckBox2.setText("NO");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(358, 358, 358)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(txtStaffID1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(355, 355, 355)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(Designation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(32, 32, 32)
                                            .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(55, 55, 55)
                                            .addComponent(txtStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(37, 37, 37)
                                            .addComponent(txtConNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(txtspecialisation, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(txtqualification, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(66, 66, 66)
                                        .addComponent(jCheckBox1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jCheckBox2)))))
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnView))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel10)))
                .addContainerGap(628, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtConNumber, txtEmailID, txtStaffID, txtStaffID1, txtqualification, txtspecialisation});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(145, 145, 145)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStaffID1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Designation, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtqualification, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSave)
                        .addComponent(jButton1)
                        .addComponent(btnView)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtspecialisation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addContainerGap(418, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtConNumber, txtEmailID, txtStaffID, txtStaffID1});

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            HospitalDirectory hosDirectory;
            hosDirectory = system.getDBHospitalDirectory();
            for(Hospital h: hosDirectory.getHospitalDirectory())
            {
                if(h.getUserName().equals(Username))
                {   
                    StaffDirectory sDirectory = system.getDBStaffDirectory();
                    for(Staff s: sDirectory.getStaffDirectory())
                    {
                        if(s.getStaff_ID()==this.id)
                        {
                    s.setName(txtStaffID1.getText());
                    s.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    s.setConNumber(Long.parseLong(txtConNumber.getText()));
                    s.setEmailID(txtEmailID.getText());
                    s.setDesignation(Designation.getSelectedItem().toString());
                    s.setQualification(txtqualification.getText());
                    s.setSpecialization(txtspecialisation.getText());
                    s.setHospitalUsername(Username);
                    
                    if(jCheckBox1.isSelected())
                    {
                        s.setAuthorization(true);
                    }
                    else{
                        s.setAuthorization(false);
                    }
                         
                         try {
                        system.updateHosStaffDB(s);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    txtStaffID1.setText("");
                    txtStaffID.setText("");
                    txtConNumber.setText("");
                    txtEmailID.setText("");
                    txtqualification.setText("");
                    txtspecialisation.setText("");   
                        }
                    }
                    for(Staff stf : h.getStaffDirectory().getStaffDirectory())
                    {
                    if(stf.getStaff_ID()==this.id)
                    {
                    stf.setName(txtStaffID1.getText());
                    stf.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    stf.setConNumber(Long.parseLong(txtConNumber.getText()));
                    stf.setEmailID(txtEmailID.getText());
                    stf.setDesignation(Designation.getSelectedItem().toString());
                    stf.setQualification(txtqualification.getText());
                    stf.setSpecialization(txtspecialisation.getText());
                    stf.setHospitalUsername(Username);
                    }
                    }
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            // TODO add your handling code here:
            HospitalDirectory hosDirectory;
            hosDirectory = system.getDBHospitalDirectory();
            for(Hospital h: hosDirectory.getHospitalDirectory())
            {
                if(h.getUserName().equals(Username))
                {
                    Staff stf = new Staff();
                    stf = h.addStaff();
                    stf.setName(txtStaffID1.getText());
                    stf.setStaff_ID(Integer.parseInt(txtStaffID.getText()));
                    stf.setConNumber(Long.parseLong(txtConNumber.getText()));
                    stf.setEmailID(txtEmailID.getText());
                    stf.setDesignation(Designation.getSelectedItem().toString());
                    stf.setQualification(txtqualification.getText());
                    stf.setSpecialization(txtspecialisation.getText());
                    stf.setHospitalUsername(Username);
                    
                    if(jCheckBox1.isSelected())
                    {
                        stf.setAuthorization(true);
                    }
                    else{
                        stf.setAuthorization(false);
                    }
                    
                    try {
                        system.saveHosStaffDB(stf);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    txtStaffID1.setText("");
                    txtStaffID.setText("");
                    txtConNumber.setText("");
                    txtEmailID.setText("");
                    txtqualification.setText("");
                    txtspecialisation.setText("");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        UpdateStaffdetails usd;
        try {
            usd = new UpdateStaffdetails(this.jSplitPane1,this.system,Username);
            jSplitPane1.setRightComponent(usd);
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Designation;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtConNumber;
    private javax.swing.JTextField txtEmailID;
    private javax.swing.JTextField txtStaffID;
    private javax.swing.JTextField txtStaffID1;
    private javax.swing.JTextField txtqualification;
    private javax.swing.JTextField txtspecialisation;
    // End of variables declaration//GEN-END:variables

    private void populateFeild(EcoSystem system,String Username,int id) {
      //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
      if(id!=-1)
      {
          try {
            // TODO add your handling code here:
            StaffDirectory stfDirectory;
            stfDirectory = system.getDBStaffDirectory();
            for(Staff s: stfDirectory.getStaffDirectory())
            {
                if(s.getStaff_ID()==id)
                {
                    txtStaffID.setText(String.valueOf(s.getStaff_ID()));
                    txtStaffID1.setText(s.getName());
                    txtConNumber.setText(String.valueOf(s.getConNumber()));
                    txtEmailID.setText(s.getEmailID());
                    txtqualification.setText(s.getQualification());
                    txtspecialisation.setText(s.getSpecialization());
                    if(s.isAuthorization())
                    {
                        jCheckBox1.setSelected(true);
                        jCheckBox2.setSelected(false);
                    }
                    else{
                        jCheckBox1.setSelected(false);
                        jCheckBox2.setSelected(true);
                    }
                    Designation.setSelectedItem(s.getDesignation());
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageStaffdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }
}
