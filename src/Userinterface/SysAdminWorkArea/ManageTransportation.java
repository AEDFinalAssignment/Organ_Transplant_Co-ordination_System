/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.SysAdminWorkArea;


import System.EcoSystem;


import System.Transportation.TransportDirectory;
import System.Transportation.Transportation;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class ManageTransportation extends javax.swing.JPanel {

    /**
     * Creates new form ManageTransportation
     */

    private EcoSystem system;
    private JSplitPane jSplitPane1;
    Transportation transportation;
    TransportDirectory TransportationDirectory;
    JPanel Managepanel;
    public ManageTransportation(JSplitPane jSplitPane1,EcoSystem system,TransportDirectory TransportationDirectory,JPanel Managepanel) throws SQLException {
        initComponents();
        this.jSplitPane1 = jSplitPane1;
        this.system = system;
      this.TransportationDirectory = TransportationDirectory;
      this .Managepanel=Managepanel;
      populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btntransupdate = new javax.swing.JButton();
        txtTransportlogin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransportation = new javax.swing.JTable();
        txtTransportcity = new javax.swing.JTextField();
        txtTransportaddress = new javax.swing.JTextField();
        btnTransdelete = new javax.swing.JButton();
        btnHospitalsave = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnTransview = new javax.swing.JButton();
        txtTransportname = new javax.swing.JTextField();
        txtTransportstate = new javax.swing.JTextField();
        txtTransportzipcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTransportationmail = new javax.swing.JTextField();
        txtTransportpassword = new javax.swing.JPasswordField();
        txtAvailtrans = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("State");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 353, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setText("MANAGE TRANSPORTATION");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 60, -1, -1));

        jLabel5.setText("Address Line ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 272, -1, -1));

        jLabel3.setText("Login Name");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 190, -1, -1));

        jLabel9.setText("Available Mode of Transports");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 444, -1, -1));

        btntransupdate.setText("Update");
        btntransupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntransupdateActionPerformed(evt);
            }
        });
        jPanel1.add(btntransupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 520, -1, -1));

        txtTransportlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransportloginActionPerformed(evt);
            }
        });
        jPanel1.add(txtTransportlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 190, 261, -1));

        jLabel8.setText("Zip Code");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 394, -1, -1));

        tblTransportation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name ", "Login Name ", "Password", "Address Line", "City", "State", "Zip Code", "Mail ID ", "mode of Transport"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTransportation);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, 777, 262));
        jPanel1.add(txtTransportcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 311, 261, -1));
        jPanel1.add(txtTransportaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 269, 261, -1));

        btnTransdelete.setText("Delete");
        btnTransdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransdeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnTransdelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1259, 524, -1, -1));

        btnHospitalsave.setText("SAVE");
        btnHospitalsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalsaveActionPerformed(evt);
            }
        });
        jPanel1.add(btnHospitalsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 570, -1, -1));

        jLabel4.setText("Password");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 227, -1, -1));

        jLabel6.setText("City");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 314, -1, -1));

        btnTransview.setText("View ");
        btnTransview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransviewActionPerformed(evt);
            }
        });
        jPanel1.add(btnTransview, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, -1, -1));
        jPanel1.add(txtTransportname, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 153, 261, -1));
        jPanel1.add(txtTransportstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 353, 261, -1));
        jPanel1.add(txtTransportzipcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 391, 261, -1));

        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 156, -1, -1));

        jLabel19.setText("Mail ID ");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 480, -1, -1));
        jPanel1.add(txtTransportationmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 261, -1));
        jPanel1.add(txtTransportpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 227, 261, -1));
        jPanel1.add(txtAvailtrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 441, 261, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/d8.jpg"))); // NOI18N
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1470, 820));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:

        jSplitPane1.setRightComponent(Managepanel);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void btnTransviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransviewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblTransportation.getSelectedRow();

        if(selectedRowIndex <0){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblTransportation.getModel();
        Transportation selectedEntry = (Transportation) model.getValueAt(selectedRowIndex, 0);

        txtTransportname.setText(selectedEntry.getName());
        txtTransportlogin.setText(selectedEntry.getUserName());
        txtTransportpassword.setText(selectedEntry.getPassword());
        txtTransportationmail.setText(selectedEntry.getEmail());
        txtTransportaddress.setText(selectedEntry.getAddress());
        txtTransportcity.setText(selectedEntry.getCity());
        txtTransportstate.setText(selectedEntry.getState());
        txtTransportzipcode.setText(String.valueOf(selectedEntry.getZipCode()));
        txtAvailtrans.setText(selectedEntry.getModesOfTransportation());
    }//GEN-LAST:event_btnTransviewActionPerformed

    private void btnHospitalsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalsaveActionPerformed
        // TODO add your handling code here:

        if (txtTransportname.getText().isEmpty()) {
            txtTransportname.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportname.setForeground(Color.red);

        }
        if (txtTransportlogin.getText().isEmpty()) {
            txtTransportlogin.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportlogin.setForeground(Color.red);

        }
        if (txtTransportpassword.getText().isEmpty()) {
            txtTransportpassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportpassword.setForeground(Color.red);

        }
        if (txtTransportationmail.getText().isEmpty()) {
            txtTransportationmail.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportationmail.setForeground(Color.red);

        }
        if (txtTransportaddress.getText().isEmpty()) {
            txtTransportaddress.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportaddress.setForeground(Color.red);
        }

        if (txtTransportcity.getText().isEmpty()) {
            txtTransportcity.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportcity.setForeground(Color.red);
        }

        if (txtTransportstate.getText().isEmpty()) {
            txtTransportstate.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportstate.setForeground(Color.red);
        }

        if (txtTransportzipcode.getText().isEmpty()) {
            txtTransportzipcode.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportzipcode.setForeground(Color.red);
        }

        if (txtAvailtrans.getText().isEmpty()) {
            txtAvailtrans.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtAvailtrans.setForeground(Color.red);
        }

        //Null Value Check

        if (txtTransportname.getText().isEmpty()

            || txtTransportlogin.getText().isEmpty()
            || txtTransportpassword.getText().isEmpty()
            || txtTransportationmail.getText().isEmpty()
            || txtTransportaddress.getText().isEmpty()
            || txtTransportcity.getText().isEmpty()

            || txtTransportzipcode.getText().isEmpty()
            || txtTransportstate.getText().isEmpty()
            ||txtAvailtrans.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Enter all fields");
        }

        //Data Validation
        int validation = 1;

        if(txtTransportname.getText().matches("-?(0|[1-9]\\d*)")){
            JOptionPane.showMessageDialog(null, "Enter Valid Name");
            validation=0;
        }

        if(txtTransportcity.getText().matches("-?(0|[1-9]\\d*)")){
            JOptionPane.showMessageDialog(null, "Enter valid city name");
            validation=0;
        }

        if(txtTransportstate.getText().matches("-?(0|[1-9]\\d*)")){
            JOptionPane.showMessageDialog(null, "Enter valid state name");
            validation=0;
        }

        if(!txtTransportationmail.getText().contains("@")){
            JOptionPane.showMessageDialog(null, "Enter valid email id");
            validation=0;
        }

        if(txtTransportzipcode.getText().matches("^[a-zA-Z]*$ ")){
            JOptionPane.showMessageDialog(null, "Enter valid zipcode");
            validation=0;
        }

        //Unique Check for username

        /* if (TransportationDirectory.searchRegistry(txtTransportlogin.getText())!=null){
            JOptionPane.showMessageDialog(null, "Enter a unique Username");
            validation=0;
        }*/

        if(validation==1){

            // Intitializing Registry Object

            Transportation newtransporation = system.addTransportation();
            newtransporation.setName(txtTransportname.getText());
            newtransporation.setUserName(txtTransportlogin.getText());
            newtransporation.setPassword(txtTransportpassword.getText());
            newtransporation.setEmail(txtTransportationmail.getText());
            newtransporation.setAddress(txtTransportaddress.getText());
            newtransporation.setCity(txtTransportcity.getText());
            newtransporation.setState(txtTransportstate.getText());
            newtransporation.setZipCode(Integer.parseInt(txtTransportzipcode.getText()));
            newtransporation.setState(txtAvailtrans.getText());

            try {
                system.saveTransportationDB(newtransporation);
            } catch (SQLException ex) {
                Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Transportation details saved sucessfully");
            try {
                populateTable();
            } catch (SQLException ex) {
                Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
            }

            txtTransportname.setText("");
            txtTransportlogin.setText("");
            txtTransportpassword.setText("");
            txtTransportationmail.setText("");
            txtTransportaddress.setText("");
            txtTransportcity.setText("");
            txtTransportstate.setText("");
            txtTransportzipcode.setText("");
            txtAvailtrans.setText("");

        }

    }//GEN-LAST:event_btnHospitalsaveActionPerformed

    private void btnTransdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransdeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblTransportation.getSelectedRow();

        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a Transportation to delete.");
            return;
        }

        DefaultTableModel modeltrans = (DefaultTableModel) tblTransportation.getModel();
        Transportation selectedTransportation = (Transportation) modeltrans.getValueAt(selectedRowIndex, 0);

        system.getTransportDirectory().getTransportationDirectory().remove(selectedTransportation);

        try {
            system.deleteTransportationDB(selectedTransportation);
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(this, "Transportation details deleted sucessfully");
        try {
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnTransdeleteActionPerformed

    private void txtTransportloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransportloginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransportloginActionPerformed

    private void btntransupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntransupdateActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:
            int selectedRowIndex = tblTransportation.getSelectedRow();

            if(selectedRowIndex<0)
            {
                JOptionPane.showMessageDialog(this, "Select a Transportation to update.");
                return;
            }

            DefaultTableModel modeltrans = (DefaultTableModel) tblTransportation.getModel();
            Transportation selectedTransportation = (Transportation) modeltrans.getValueAt(selectedRowIndex, 0);
            String TransportationUsername = selectedTransportation.getUserName();
            TransportDirectory transDirectory = system.getDBTransportationDirectory();

            for(Transportation trans: transDirectory.getTransportationDirectory())
            {
                if(trans.getUserName().equals(TransportationUsername))
                {
                    trans.setName(txtTransportname.getText());
                    trans.setUserName(txtTransportlogin.getText());
                    trans.setPassword(txtTransportpassword.getText());
                    trans.setAddress(txtTransportaddress.getText());
                    trans.setCity(txtTransportcity.getText());
                    trans.setState(txtTransportstate.getText());
                    trans.setZipCode(Integer.parseInt(txtTransportzipcode.getText()));
                    trans.setEmail(txtTransportationmail.getText());
                    trans.setModesOfTransportation(txtAvailtrans.getText());

                    try {
                        system.updateTransportationDB(trans);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(this, "Transportation details updated sucessfully");
                    try {
                        populateTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    txtTransportname.setText("");
                    txtTransportlogin.setText("");
                    txtTransportpassword.setText("");
                    txtTransportaddress.setText("");
                    txtTransportcity.setText("");
                    txtTransportstate.setText("");
                    txtTransportzipcode.setText("");
                    txtTransportationmail.setText("");
                    txtAvailtrans.setText("");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btntransupdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHospitalsave;
    private javax.swing.JButton btnTransdelete;
    private javax.swing.JButton btnTransview;
    private javax.swing.JButton btntransupdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransportation;
    private javax.swing.JTextField txtAvailtrans;
    private javax.swing.JTextField txtTransportaddress;
    private javax.swing.JTextField txtTransportationmail;
    private javax.swing.JTextField txtTransportcity;
    private javax.swing.JTextField txtTransportlogin;
    private javax.swing.JTextField txtTransportname;
    private javax.swing.JPasswordField txtTransportpassword;
    private javax.swing.JTextField txtTransportstate;
    private javax.swing.JTextField txtTransportzipcode;
    // End of variables declaration//GEN-END:variables
    private void populateTable() throws SQLException {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       DefaultTableModel model = (DefaultTableModel) tblTransportation.getModel();
       model.setRowCount(0);
         
       TransportDirectory transDirectory = system.getDBTransportationDirectory();
         for(Transportation h: transDirectory.getTransportationDirectory())
         {
             Object[] row = new Object[9];
             row[0]=h;
             row[1]=h.getUserName();
             row[2]=h.getPassword();
             row[3]=h.getAddress();
             row[4]=h.getCity();
             row[5]=h.getState();
             row[6]=h.getZipCode();
              row[7]=h.getEmail();
             row[8]=h.getModesOfTransportation();
            
             
             
             model.addRow(row);
         }
    }


}

