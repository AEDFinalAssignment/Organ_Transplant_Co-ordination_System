/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.SysAdminWorkArea;


import System.EcoSystem;


import System.Transportation.TransportDirectory;
import System.Transportation.Transportation;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class ManageTransportation extends javax.swing.JPanel {

    /**
     * Creates new form ManageTransportation
     */

    private EcoSystem system;
    private JSplitPane jSplitPane1;
    Transportation transportation;
    TransportDirectory TransportationDirectory;
    public ManageTransportation(JSplitPane jSplitPane1,EcoSystem system,TransportDirectory TransportationDirectory) throws SQLException {
        initComponents();
        this.jSplitPane1 = jSplitPane1;
        this.system = system;
      this.TransportationDirectory = TransportationDirectory;
      populateTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btntransupdate = new javax.swing.JButton();
        txtTransportlogin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransportation = new javax.swing.JTable();
        txtTransportcity = new javax.swing.JTextField();
        txtTransportaddress = new javax.swing.JTextField();
        txtHospitalsearch = new javax.swing.JTextField();
        btnTransdelete = new javax.swing.JButton();
        btnHospitalsave = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnTransview = new javax.swing.JButton();
        txtTransportname = new javax.swing.JTextField();
        txtTransportstate = new javax.swing.JTextField();
        txtTransportzipcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTransportationmail = new javax.swing.JTextField();
        txtTransportpassword = new javax.swing.JPasswordField();
        txtAvailtrans = new javax.swing.JTextField();

        jLabel7.setText("State");

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setText("MANAGE TRANSPORTATION");

        jLabel5.setText("Address Line ");

        jLabel3.setText("Login Name");

        jLabel9.setText("Available Mode of Transports");

        btnSearch.setText("Search");

        btntransupdate.setText("Update");
        btntransupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntransupdateActionPerformed(evt);
            }
        });

        txtTransportlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransportloginActionPerformed(evt);
            }
        });

        jLabel8.setText("Zip Code");

        tblTransportation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name ", "Login Name ", "Password", "Address Line", "City", "State", "Zip Code", "Mail ID ", "mode of Transport"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTransportation);

        btnTransdelete.setText("Delete");
        btnTransdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransdeleteActionPerformed(evt);
            }
        });

        btnHospitalsave.setText("SAVE");
        btnHospitalsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHospitalsaveActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        jLabel6.setText("City");

        btnTransview.setText("View ");
        btnTransview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransviewActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        jLabel19.setText("Mail ID ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(322, 322, 322)
                .addComponent(btnHospitalsave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTransportname, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportlogin, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportaddress, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportcity, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportstate, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportzipcode, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtTransportpassword)
                                    .addComponent(txtAvailtrans)))
                            .addComponent(jLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(67, 67, 67)
                                .addComponent(txtTransportationmail, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnTransview)
                                .addGap(261, 261, 261)
                                .addComponent(btntransupdate)
                                .addGap(241, 241, 241)
                                .addComponent(btnTransdelete)
                                .addGap(52, 52, 52))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtHospitalsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(44, 44, 44)
                                    .addComponent(btnSearch))))
                        .addGap(89, 89, 89))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHospitalsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch))
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntransupdate)
                            .addComponent(btnTransview)
                            .addComponent(btnTransdelete)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTransportname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtTransportlogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtTransportpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTransportaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTransportcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtTransportstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtTransportzipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtAvailtrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtTransportationmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addComponent(btnHospitalsave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTransportloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransportloginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransportloginActionPerformed

    private void btnHospitalsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHospitalsaveActionPerformed
        // TODO add your handling code here:
        
         if (txtTransportname.getText().isEmpty()) {
            txtTransportname.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportname.setForeground(Color.red);

        }
        if (txtTransportlogin.getText().isEmpty()) {
            txtTransportlogin.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportlogin.setForeground(Color.red);

        }
        if (txtTransportpassword.getText().isEmpty()) {
            txtTransportpassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportpassword.setForeground(Color.red);

        }
        if (txtTransportationmail.getText().isEmpty()) {
            txtTransportationmail.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportationmail.setForeground(Color.red);

        }
        if (txtTransportaddress.getText().isEmpty()) {
            txtTransportaddress.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportaddress.setForeground(Color.red);
        }
        
          if (txtTransportcity.getText().isEmpty()) {
            txtTransportcity.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportcity.setForeground(Color.red);
        }
     
          if (txtTransportstate.getText().isEmpty()) {
            txtTransportstate.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportstate.setForeground(Color.red);
        }
          
          if (txtTransportzipcode.getText().isEmpty()) {
            txtTransportzipcode.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtTransportzipcode.setForeground(Color.red);
        }

           if (txtAvailtrans.getText().isEmpty()) {
            txtAvailtrans.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtAvailtrans.setForeground(Color.red);
        }

          
         //Null Value Check
          
         if (txtTransportname.getText().isEmpty()

                || txtTransportlogin.getText().isEmpty()
                || txtTransportpassword.getText().isEmpty()
                || txtTransportationmail.getText().isEmpty()
                || txtTransportaddress.getText().isEmpty()
                || txtTransportcity.getText().isEmpty()

                || txtTransportzipcode.getText().isEmpty()
                || txtTransportstate.getText().isEmpty()
                 ||txtAvailtrans.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Enter all fields");
        } 
          
        //Data Validation
        int validation = 1;
        
        if(txtTransportname.getText().matches("-?(0|[1-9]\\d*)")){
             JOptionPane.showMessageDialog(null, "Enter Valid Name");    
              validation=0;
        }
        
        if(txtTransportcity.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid city name");    
               validation=0;            
        }
        
         if(txtTransportstate.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid state name");    
               validation=0;            
        }   
         
         if(txtTransportationmail.getText().contains("@")&& (txtTransportationmail.getText().contains(".com"))){
              JOptionPane.showMessageDialog(null, "Enter valid email id");    
               validation=0;  
         }
         
           if(txtTransportzipcode.getText().matches("^[a-zA-Z]*$ ")){
               JOptionPane.showMessageDialog(null, "Enter valid zipcode");    
               validation=0;            
        }   
         
           
         //Unique Check for username
         
         if (TransportationDirectory.searchRegistry(txtTransportlogin.getText())!=null){
              JOptionPane.showMessageDialog(null, "Enter a unique Username");    
              validation=0; 
         }
         
         if(validation==1){
             
                // Intitializing Registry Object
         
         Transportation newtransporation = system.addTransportation();
         newtransporation.setName(txtTransportname.getText());
         newtransporation.setUserName(txtTransportlogin.getText());
         newtransporation.setPassword(txtTransportpassword.getText());
         newtransporation.setEmail(txtTransportationmail.getText());
         newtransporation.setAddress(txtTransportaddress.getText());
         newtransporation.setCity(txtTransportcity.getText());
         newtransporation.setState(txtTransportstate.getText());
         newtransporation.setZipCode(Integer.parseInt(txtTransportzipcode.getText()));
          newtransporation.setState(txtAvailtrans.getText());
         

       
         
      

          try {
            system.saveTransportationDB(newtransporation);
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Transportation details saved sucessfully");
        try {
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }

         
         txtTransportname.setText("");
         txtTransportlogin.setText("");
         txtTransportpassword.setText("");
         txtTransportationmail.setText("");
         txtTransportaddress.setText("");
         txtTransportcity.setText("");
         txtTransportstate.setText("");
         txtTransportzipcode.setText("");
          txtAvailtrans.setText("");
         
         
        
    }//GEN-LAST:event_btnHospitalsaveActionPerformed

    private void btnTransviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransviewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblTransportation.getSelectedRow();
        
        if(selectedRowIndex <0){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;            
        }
        
        DefaultTableModel model = (DefaultTableModel) tblTransportation.getModel();
        Transportation selectedEntry = (Transportation) model.getValueAt(selectedRowIndex, 0);       
        
         
        txtTransportname.setText(selectedEntry.getName());
        txtTransportlogin.setText(selectedEntry.getUserName());
        txtTransportpassword.setText(selectedEntry.getPassword());
        txtTransportationmail.setText(selectedEntry.getEmail());
        txtTransportaddress.setText(selectedEntry.getAddress());
        txtTransportcity.setText(selectedEntry.getCity());
        txtTransportstate.setText(selectedEntry.getState());
        txtTransportzipcode.setText(String.valueOf(selectedEntry.getZipCode()));
        txtAvailtrans.setText(selectedEntry.getModesOfTransportation());
    }//GEN-LAST:event_btnTransviewActionPerformed

    private void btntransupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntransupdateActionPerformed
        // TODO add your handling code here:

          try {
            // TODO add your handling code here:
            int selectedRowIndex = tblTransportation.getSelectedRow();
            
            if(selectedRowIndex<0)
            {
                JOptionPane.showMessageDialog(this, "Select a Transportation to update.");
                return;
            }
            
            DefaultTableModel modeltrans = (DefaultTableModel) tblTransportation.getModel();
            Transportation selectedTransportation = (Transportation) modeltrans.getValueAt(selectedRowIndex, 0);
            String TransportationUsername = selectedTransportation.getUserName();
            TransportDirectory transDirectory = system.getDBTransportationDirectory();
            
            for(Transportation trans: transDirectory.getTransportationDirectory())
            {   
                if(trans.getUserName().equals(TransportationUsername))
                {
                    trans.setName(txtTransportname.getText());
                    trans.setUserName(txtTransportlogin.getText());
                    trans.setPassword(txtTransportpassword.getText());
                    trans.setAddress(txtTransportaddress.getText());
                    trans.setCity(txtTransportcity.getText());
                    trans.setState(txtTransportstate.getText());
                    trans.setZipCode(Integer.parseInt(txtTransportzipcode.getText()));
                    trans.setEmail(txtTransportationmail.getText());
                    trans.setModesOfTransportation(txtAvailtrans.getText());
                    
                    
                    try {
                        system.updateTransportationDB(trans);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(this, "Transportation details updated sucessfully");
                    try {
                        populateTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    txtTransportname.setText("");
                    txtTransportlogin.setText("");
                    txtTransportpassword.setText("");
                    txtTransportaddress.setText("");
                    txtTransportcity.setText("");
                    txtTransportstate.setText("");
                    txtTransportzipcode.setText("");
                    txtTransportationmail.setText("");
                    txtAvailtrans.setText("");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btntransupdateActionPerformed

    private void btnTransdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransdeleteActionPerformed
        // TODO add your handling code here:
           int selectedRowIndex = tblTransportation.getSelectedRow();

        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a Transportation to delete.");
            return;
        }
        
        DefaultTableModel modeltrans = (DefaultTableModel) tblTransportation.getModel();
        Transportation selectedTransportation = (Transportation) modeltrans.getValueAt(selectedRowIndex, 0);
        
        system.getTransportDirectory().getTransportationDirectory().remove(selectedTransportation);
        
        try {
            system.deleteTransportationDB(selectedTransportation);
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(this, "Transportation details deleted sucessfully");
        try {
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageTransportation.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnTransdeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHospitalsave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTransdelete;
    private javax.swing.JButton btnTransview;
    private javax.swing.JButton btntransupdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransportation;
    private javax.swing.JTextField txtAvailtrans;
    private javax.swing.JTextField txtHospitalsearch;
    private javax.swing.JTextField txtTransportaddress;
    private javax.swing.JTextField txtTransportationmail;
    private javax.swing.JTextField txtTransportcity;
    private javax.swing.JTextField txtTransportlogin;
    private javax.swing.JTextField txtTransportname;
    private javax.swing.JPasswordField txtTransportpassword;
    private javax.swing.JTextField txtTransportstate;
    private javax.swing.JTextField txtTransportzipcode;
    // End of variables declaration//GEN-END:variables
    private void populateTable() throws SQLException {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       DefaultTableModel model = (DefaultTableModel) tblTransportation.getModel();
       model.setRowCount(0);
         
       TransportDirectory transDirectory = system.getDBTransportationDirectory();
         for(Transportation h: transDirectory.getTransportationDirectory())
         {
             Object[] row = new Object[9];
             row[0]=h;
             row[1]=h.getUserName();
             row[2]=h.getPassword();
             row[3]=h.getAddress();
             row[4]=h.getCity();
             row[5]=h.getState();
             row[6]=h.getZipCode();
              row[7]=h.getEmail();
             row[8]=h.getModesOfTransportation();
            
             
             
             model.addRow(row);
         }
    }


}

