/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.SysAdminWorkArea;


import System.EcoSystem;
import System.Registry.Registry;
import System.Registry.RegistryDirectory;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author sanjeev
 */
public class ManageRegistry extends javax.swing.JPanel {

    /**
     * Creates new form ManageRegistry
     */
    private EcoSystem system;
    private JSplitPane jSplitPane1;
   JPanel Managepanel;
    Registry registry;
    RegistryDirectory registryDirectory;
    public ManageRegistry(JSplitPane jSplitPane1,EcoSystem system,RegistryDirectory registryDirectory,JPanel Managepanel) throws SQLException {
        initComponents();
        this.jSplitPane1 = jSplitPane1;
        this.system = system;
      this.registryDirectory = registryDirectory;
      this.Managepanel=Managepanel;
       
        populateTable();
    

     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnView = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRegaddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRegstate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtHospitalsearch = new javax.swing.JTextField();
        txtRegzipcode = new javax.swing.JTextField();
        txtRegcity = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtReglogin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRegname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegistry = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtRegistrymail = new javax.swing.JTextField();
        txtRegpassword = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();

        btnView.setText("View ");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel6.setText("City");

        jLabel5.setText("Address Line ");

        jLabel8.setText("Zip Code");

        jLabel3.setText("Login Name");

        btnSearch.setText("Search");

        jLabel4.setText("Password");

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jLabel1.setText("MANAGE REGISTRY SYSTEM");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel7.setText("State");

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtReglogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegloginActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        tblRegistry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name ", "Login Name ", "Password", "Address Line", "City", "State", "Zip Code", "Mail ID "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRegistry);

        jLabel19.setText("Mail ID ");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(67, 67, 67)
                                            .addComponent(txtRegname, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel7)
                                                .addComponent(jLabel8))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtReglogin)
                                                .addComponent(txtRegaddress)
                                                .addComponent(txtRegcity)
                                                .addComponent(txtRegstate)
                                                .addComponent(txtRegzipcode, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                                .addComponent(txtRegpassword))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(284, 284, 284)
                                .addComponent(btnSave))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel19)
                                .addGap(67, 67, 67)
                                .addComponent(txtRegistrymail, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(btnView)
                                .addGap(237, 237, 237)
                                .addComponent(btnUpdate)
                                .addGap(227, 227, 227)
                                .addComponent(btnDelete))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtHospitalsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(btnSearch))))))
                    .addComponent(jLabel9))
                .addContainerGap(361, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel19, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtRegname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtReglogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtRegpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtRegaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtRegcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtRegstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtRegzipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtRegistrymail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHospitalsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch))
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnView)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(338, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtRegloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegloginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegloginActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:        
        
        
         if (txtRegname.getText().isEmpty()) {
            txtRegname.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegname.setForeground(Color.red);

        }
        if (txtReglogin.getText().isEmpty()) {
            txtReglogin.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtReglogin.setForeground(Color.red);

        }
        if (txtRegpassword.getText().isEmpty()) {
            txtRegpassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegpassword.setForeground(Color.red);

        }
        if (txtRegistrymail.getText().isEmpty()) {
            txtRegistrymail.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegistrymail.setForeground(Color.red);

        }
        if (txtRegaddress.getText().isEmpty()) {
            txtRegaddress.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegaddress.setForeground(Color.red);
        }
        
          if (txtRegcity.getText().isEmpty()) {
            txtRegcity.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegcity.setForeground(Color.red);
        }
     
          if (txtRegstate.getText().isEmpty()) {
            txtRegstate.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegstate.setForeground(Color.red);
        }
          
          if (txtRegzipcode.getText().isEmpty()) {
            txtRegzipcode.setBorder(BorderFactory.createLineBorder(Color.RED));
            txtRegzipcode.setForeground(Color.red);
        }
          
         //Null Value Check
         
         if (txtRegname.getText().isEmpty()
                || txtReglogin.getText().isEmpty()
                || txtRegpassword.getText().isEmpty()
                || txtRegistrymail.getText().isEmpty()
                || txtRegaddress.getText().isEmpty()
                || txtRegcity.getText().isEmpty()
                || txtRegzipcode.getText().isEmpty()
                || txtRegstate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter all fields");
        } 
         
          
        //Data Validation
        int validation = 1;
        
        if(txtRegname.getText().matches("-?(0|[1-9]\\d*)")){
             JOptionPane.showMessageDialog(null, "Enter Valid Name");    
              validation=0;
        }
        
        if(txtRegcity.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid city name");    
               validation=0;            
        }
        
         if(txtRegstate.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid state name");    
               validation=0;            
        }   
         
//         if(txtRegistrymail.getText().contains("@")&& (txtRegistrymail.getText().contains(".com"))){
//              JOptionPane.showMessageDialog(null, "Enter valid email id");    
//               validation=0;  
//         }
         

           if(txtRegzipcode.getText().matches("^[a-zA-Z]*$ ")){
               JOptionPane.showMessageDialog(null, "Enter valid zipcode");    
               validation=0;            
        }   
         
           
//         //Unique Check for username
//         
//         if (registryDirectory.searchRegistry(txtReglogin.getText())!=null){
//              JOptionPane.showMessageDialog(null, "Enter a unique Username");    
//              validation=0; 
//         }
         
         
         
        // Add entry to the table

           String name = txtRegname.getText();
           String login = txtReglogin.getText();
           String password = txtRegpassword.getText();
           String email = txtRegistrymail.getText();
           String address = txtRegaddress.getText();
           String city = txtRegcity.getText();
           String state = txtRegstate.getText();
           String zipcode = txtRegzipcode.getText();

           int selectedRowIndex = tblRegistry.getSelectedRow();  


           DefaultTableModel model = (DefaultTableModel) tblRegistry.getModel();
           model.setValueAt(name, selectedRowIndex, 0);
           model.setValueAt(login, selectedRowIndex, 1);
           model.setValueAt(password, selectedRowIndex, 2);
           model.setValueAt(email, selectedRowIndex, 3);
           model.setValueAt(address, selectedRowIndex, 4);
           model.setValueAt(city, selectedRowIndex, 5);
           model.setValueAt(state, selectedRowIndex, 6);
           model.setValueAt(zipcode, selectedRowIndex, 7);


         Registry newreRegistry = system.addRegistry();
         newreRegistry.setName(txtRegname.getText());
         newreRegistry.setUserName(txtReglogin.getText());
         newreRegistry.setPassword(txtRegpassword.getText());
         newreRegistry.setEmail(txtRegistrymail.getText());
         newreRegistry.setAddress(txtRegaddress.getText());
         newreRegistry.setCity(txtRegcity.getText());
         newreRegistry.setState(txtRegstate.getText());
         newreRegistry.setZipCode(Integer.parseInt(txtRegzipcode.getText()));
         
         try {
            system.saveRegistryDB(newreRegistry);
        } catch (SQLException ex) {
            Logger.getLogger(ManageHospital.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Registry details saved sucessfully");
        try {
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageHospital.class.getName()).log(Level.SEVERE, null, ex);
        }

         
         txtRegname.setText("");
         txtReglogin.setText("");
         txtRegpassword.setText("");
         txtRegistrymail.setText("");
         txtRegaddress.setText("");
         txtRegcity.setText("");
         txtRegstate.setText("");
         txtRegzipcode.setText("");
         
         
         
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:       
        
        int selectedRowIndex = tblRegistry.getSelectedRow();
        
        if(selectedRowIndex <0){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;            
        }
        
        DefaultTableModel model = (DefaultTableModel) tblRegistry.getModel();
        Registry selectedEntry = (Registry) model.getValueAt(selectedRowIndex, 0);   
       
         
        txtRegname.setText(selectedEntry.getName());
        txtReglogin.setText(selectedEntry.getUserName());
        txtRegpassword.setText(selectedEntry.getPassword());
        txtRegaddress.setText(selectedEntry.getAddress());
        txtRegcity.setText(selectedEntry.getCity());
        txtRegstate.setText(selectedEntry.getState());
        txtRegzipcode.setText(String.valueOf(selectedEntry.getZipCode()));
      txtRegistrymail.setText(selectedEntry.getEmail());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRegistry.getSelectedRow();
        try {
            // TODO add your handling code here:
            
            if(selectedRowIndex<0)
            {
                JOptionPane.showMessageDialog(this, "Select a Registry to update.");
                return;
            }
            
            DefaultTableModel modelreg = (DefaultTableModel) tblRegistry.getModel();
            Registry selectedRegistry = (Registry) modelreg.getValueAt(selectedRowIndex, 0);
            String registryUsername = selectedRegistry.getUserName();
            RegistryDirectory regDirectory = system.getDBRegistryDirectory();
            
            for(Registry reg: regDirectory.getRegistryDirectory())
            {   
                if(reg.getUserName().equals(registryUsername))
                {
                    reg.setName(txtRegname.getText());
                    reg.setUserName(txtReglogin.getText());
                    reg.setPassword(txtRegpassword.getText());
                    reg.setAddress(txtRegaddress.getText());
                    reg.setCity(txtRegcity.getText());
                    reg.setState(txtRegstate.getText());
                    reg.setZipCode(Integer.parseInt(txtRegzipcode.getText()));
                    reg.setEmail(txtRegistrymail.getText());
                    
                    System.out.println(11111);
                    try {
                        system.updateRegistryDB(reg);
                        System.out.println(22222);
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageRegistry.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(this, "Registry details updated sucessfully");
                    try {
                        populateTable();
                    } catch (SQLException ex) {
                        Logger.getLogger(ManageRegistry.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    txtRegname.setText("");
                    txtReglogin.setText("");
                    txtRegpassword.setText("");
                    txtRegaddress.setText("");
                    txtRegcity.setText("");
                    txtRegstate.setText("");
                    txtRegzipcode.setText("");
                    txtRegistrymail.setText("");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(ManageRegistry.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultTableModel model = (DefaultTableModel) tblRegistry.getModel();
        Registry selectedEntry = (Registry) model.getValueAt(selectedRowIndex, 0);       
        
        
        String name = txtRegname.getText();
        String userName = txtReglogin.getText();
        String password = txtRegpassword.getText();
        String email = txtRegistrymail.getText();
        String address = txtRegaddress.getText();        
        String city = txtRegcity.getText();
        String state = txtRegstate.getText();
        int zipcode = Integer.parseInt(txtRegzipcode.getText());
        
           //Null Value Check
         
         if (txtRegname.getText().isEmpty()
                || txtReglogin.getText().isEmpty()
                || txtRegpassword.getText().isEmpty()
                || txtRegistrymail.getText().isEmpty()
                || txtRegaddress.getText().isEmpty()
                || txtRegcity.getText().isEmpty()
                || txtRegzipcode.getText().isEmpty()
                || txtRegstate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter all fields");
        } 
         
          
        //Data Validation
        int validation = 1;
        
        if(txtRegname.getText().matches("-?(0|[1-9]\\d*)")){
             JOptionPane.showMessageDialog(null, "Enter Valid Name");    
              validation=0;
        }
        
        if(txtRegcity.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid city name");    
               validation=0;            
        }
        
         if(txtRegstate.getText().matches("-?(0|[1-9]\\d*)")){
               JOptionPane.showMessageDialog(null, "Enter valid state name");    
               validation=0;            
        }   
         
         if(txtRegistrymail.getText().contains("@")&& (txtRegistrymail.getText().contains(".com"))){
              JOptionPane.showMessageDialog(null, "Enter valid email id");    
               validation=0;  
         }
         
           if(txtRegzipcode.getText().matches("^[a-zA-Z]*$ ")){
               JOptionPane.showMessageDialog(null, "Enter valid zipcode");    
               validation=0;            
        }   
         
           
         //Unique Check for username
         
         if (registryDirectory.searchRegistry(txtReglogin.getText())!=null){
              JOptionPane.showMessageDialog(null, "Enter a unique Username");    
              validation=0; 
         }
         
         if(validation==1){
             
          Registry registry = registryDirectory.searchRegistry(txtReglogin.getText());
          
          registry.setName(name);
          registry.setUserName(userName);
          registry.setPassword(password);
          registry.setEmail(email);
          registry.setAddress(address);
          registry.setCity(city);
          registry.setState(state);
          registry.setZipCode(zipcode);
          
             JOptionPane.showMessageDialog(this, "New Registry details are added.");             
         }    
        
        
          
        // Updating the value in the table      
          
          
          
        model.setValueAt(name, selectedRowIndex, 0);
        model.setValueAt(userName, selectedRowIndex, 1);
        model.setValueAt(password, selectedRowIndex, 2);
        model.setValueAt(email, selectedRowIndex, 3);
        model.setValueAt(address, selectedRowIndex, 4);
        model.setValueAt(city, selectedRowIndex, 5);
        model.setValueAt(state, selectedRowIndex, 6);
        model.setValueAt(zipcode, selectedRowIndex, 7);
               
       // Setting the field to null   
          
         
         txtRegname.setText("");
         txtReglogin.setText("");
         txtRegpassword.setText("");
         txtRegistrymail.setText("");
         txtRegaddress.setText("");
         txtRegcity.setText("");
         txtRegstate.setText("");
         txtRegzipcode.setText("");
          
          
          
                 
        
        
        
        
        
        
        
        

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblRegistry.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a hospital to delete.");
            return;
        }
        
        DefaultTableModel modelhos = (DefaultTableModel) tblRegistry.getModel();
        Registry selectedRegistry = (Registry) modelhos.getValueAt(selectedRowIndex, 0);
        
        system.getRegistryDirectory().getRegistryDirectory().remove(selectedRegistry);
        
        try {
            system.deleteRegistryDB(selectedRegistry);
        } catch (SQLException ex) {
            Logger.getLogger(ManageRegistry.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(this, "Registry details deleted sucessfully");
        try {
            populateTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageRegistry.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:

        jSplitPane1.setRightComponent(Managepanel);
    }//GEN-LAST:event_jLabel9MouseClicked

    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRegistry;
    private javax.swing.JTextField txtHospitalsearch;
    private javax.swing.JTextField txtRegaddress;
    private javax.swing.JTextField txtRegcity;
    private javax.swing.JTextField txtRegistrymail;
    private javax.swing.JTextField txtReglogin;
    private javax.swing.JTextField txtRegname;
    private javax.swing.JPasswordField txtRegpassword;
    private javax.swing.JTextField txtRegstate;
    private javax.swing.JTextField txtRegzipcode;
    // End of variables declaration//GEN-END:variables
 
    private void populateTable() throws SQLException {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       DefaultTableModel model = (DefaultTableModel)tblRegistry.getModel();
       model.setRowCount(0);
         
       RegistryDirectory regDirectory = system.getDBRegistryDirectory();
         for(Registry h: regDirectory.getRegistryDirectory())
         {
             Object[] row = new Object[8];
             row[0]=h;
             row[1]=h.getUserName();
             row[2]=h.getPassword();
             row[3]=h.getAddress();
             row[4]=h.getCity();
             row[5]=h.getState();
             row[6]=h.getZipCode();
           
             row[7]=h.getEmail();
             
             model.addRow(row);
         }
    }
 
    }





