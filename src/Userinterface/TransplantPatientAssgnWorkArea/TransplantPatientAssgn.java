/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Userinterface.TransplantPatientAssgnWorkArea;

import System.EcoSystem;
import System.Hospital.Patient.Patient;
import System.Hospital.Patient.PatientDirectory;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sanjeev
 */
public class TransplantPatientAssgn extends javax.swing.JPanel {

    /**
     * Creates new form TransplantPatiientAssgn
     */
     private EcoSystem system;
    private JSplitPane jSplitPane1;
    JPanel managepatient;
    String Username;
    public TransplantPatientAssgn(JSplitPane jSplitPane1,EcoSystem system,JPanel managepatient,String Username) throws SQLException {
        initComponents();
         this.jSplitPane1 = jSplitPane1;
        this.system = system;
        this.managepatient=managepatient;
        this.Username = Username;
        populateTable(Username);
    }
    private void populateTable(String Username) throws SQLException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel model = (DefaultTableModel) tblPatientdetails.getModel();
        model.setRowCount(0);
        
        PatientDirectory PatientDirectory;
        PatientDirectory = system.getDBPatientDirectory();   
        
        for(Patient p: PatientDirectory.getPatientDirectory())
        {
            if(p.getHospitalUsername().equals(Username))
            {
            Object[] row = new Object[15];
             row[0]=p;
             row[1]=p.getPatientID();
             row[2]=p.getEntryDate();
             row[3]=p.getName();
             row[4]=p.getAge();
             row[5]=p.getGender();
             row[6]=p.getAddress();
             row[7]=p.getCity();
             row[8]=p.getState();
             row[9]=p.getZipcode();
             row[10]=p.getConNumber();
             row[11]=p.getEmailID();
             row[12]=p.getEmerConName();
             row[13]=p.getEmerConNumber();
             String Status = system.getDonarStatus(p);
             row[14]=Status;
             
             model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientdetails = new javax.swing.JTable();
        btnAddTransplantdetails = new javax.swing.JButton();
        btnChechEgdonor = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPatientdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Health ID", "Patient ID", "EntryDate", "Name", "Age", "Gender", "Address", "City", "State", "Zipcode", "Contact No", "Mail ID", "Emergency Contact Name", "Emergency contact number", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPatientdetails);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 112, 1368, 418));

        btnAddTransplantdetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddTransplantdetails.setText("Add Transplant Details ");
        btnAddTransplantdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTransplantdetailsActionPerformed(evt);
            }
        });
        add(btnAddTransplantdetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 592, 282, 30));

        btnChechEgdonor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnChechEgdonor.setText("Check Eligibility as Donor");
        btnChechEgdonor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChechEgdonorActionPerformed(evt);
            }
        });
        add(btnChechEgdonor, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 597, 250, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/back.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 36, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddTransplantdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTransplantdetailsActionPerformed
        // TODO add your handling code here:
         Transplantdetails td = new Transplantdetails(jSplitPane1,system);
                jSplitPane1.setRightComponent(td);
    }//GEN-LAST:event_btnAddTransplantdetailsActionPerformed

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:

        jSplitPane1.setRightComponent(managepatient);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void btnChechEgdonorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChechEgdonorActionPerformed
        // TODO add your handling code here:
                   int selectedRowIndex = tblPatientdetails.getSelectedRow();
        
        if(selectedRowIndex<0)
        {
            JOptionPane.showMessageDialog(this, "Select a patient to request.");
            return;
        }
        
        DefaultTableModel modeldoc = (DefaultTableModel) tblPatientdetails.getModel();
        Patient selectedPatient = (Patient) modeldoc.getValueAt(selectedRowIndex, 0);
        String selectedPatientStatus = (String) modeldoc.getValueAt(selectedRowIndex, 14);
        System.out.println(selectedPatientStatus);
        if(!selectedPatientStatus.equals("Requested") && !selectedPatientStatus.equals("Request Accepted") && !selectedPatientStatus.equals("Request Declined"))
        {
        try {
             system.requestRegistry(selectedPatient);
         } catch (SQLException ex) {
             Logger.getLogger(TransplantPatientAssgn.class.getName()).log(Level.SEVERE, null, ex);
         }
         try {
             populateTable(Username);
         } catch (SQLException ex) {
             Logger.getLogger(TransplantPatientAssgn.class.getName()).log(Level.SEVERE, null, ex);
         }
        }
        else{
            JOptionPane.showMessageDialog(this, "The patient entered has already been registered.");
        }
    }//GEN-LAST:event_btnChechEgdonorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTransplantdetails;
    private javax.swing.JButton btnChechEgdonor;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPatientdetails;
    // End of variables declaration//GEN-END:variables
}
